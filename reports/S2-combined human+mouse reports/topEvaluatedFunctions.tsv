20	Zinc finger	InputFunction
18	Post-translational modification	InputFunction
17	Developmental stage	InputFunction
15	Involvement in disease	InputFunction
15	Repeat	InputFunction
15	Protein names	InputFunction
14	Tissue specificity	InputFunction
14	pH dependence	InputFunction
13	Compositional bias	InputFunction
12	Features	InputFunction
12	Non-terminal residue	InputFunction
12	Nucleotide binding	InputFunction
11	Protein families	InputFunction
11	Pathway	InputFunction
10	DNA binding	InputFunction
10	Keywords	InputFunction
8	Non-standard residue	InputFunction
7	com.sparkbeyond.runtime.feature.functions.ZeroComplexityFunctions.extractKeys[A,B](pairs: TraversableOnce[(A, B)]): Vector[A]	ReflectedMethodDef
7	Gene ontology (GO)	InputFunction
5	Mass	InputFunction
4	com.sparkbeyond.runtime.feature.functions.TextFunctions.sentimentDistribution(text: com.sparkbeyond.runtime.feature.types.SemanticWrapper): com.sparkbeyond.runtime.feature.types.Histogram[Double]	ReflectedMethodDef
4	Sequence	InputFunction
4	Gene names  (primary )	InputFunction
4	Length	InputFunction
3	3_utr_parsedFeats.csv.gz_G_by_Gene_name	ConstantFunction
3	com.sparkbeyond.runtime.feature.functions.TextFunctions.numbersUSFormat(s: com.sparkbeyond.runtime.feature.types.SemanticWrapper): Seq[Double]	ReflectedMethodDef
3	3_utr_parsedFeats.csv.gz_5utr_counts_by_Gene_name	ConstantFunction
3	3_utr_parsedFeats.csv.gz_GC_freq_by_Gene_name	ConstantFunction
3	3_utr_parsedFeats.csv.gz_Gene_start_bp_by_Gene_name	ConstantFunction
3	com.sparkbeyond.runtime.feature.context.MultiLookupContext.getOrEmpty(key: TKey): Seq[TMember]	ReflectedMethodDef
3	3_utr_parsedFeats.csv.gz_G_freq_by_Gene_name	ConstantFunction
3	3_utr_parsedFeats.csv.gz_3_UTR_start_1_by_Gene_name	ConstantFunction
2	3_utr_parsedFeats.csv.gz_3_UTR_end_1_by_Gene_name	ConstantFunction
2	com.sparkbeyond.runtime.feature.functions.Statistics.averageInt(i: scala.collection.GenTraversableOnce[Int]): Double	ReflectedMethodDef
2	3_utr_parsedFeats.csv.gz_5_UTR_end_3_by_Gene_name	ConstantFunction
2	scala.collection.SeqLike.indices: scala.collection.immutable.Range	ReflectedMethodDef
2	com.sparkbeyond.runtime.feature.functions.TextFunctions.numbers(s: com.sparkbeyond.runtime.feature.types.SemanticWrapper): Seq[Double]	ReflectedMethodDef
2	com.sparkbeyond.runtime.feature.functions.Statistics.average(i: scala.collection.GenTraversableOnce[Double]): Double	ReflectedMethodDef
2	3_utr_parsedFeats.csv.gz_C_freq_by_Gene_name	ConstantFunction
2	3_utr_parsedFeats.csv.gz_mode_ratio_freq_by_Gene_name	ConstantFunction
2	3_utr_parsedFeats.csv.gz_3_UTR_end_3_by_Gene_name	ConstantFunction
2	3_utr_parsedFeats.csv.gz_5_UTR_2_len_by_Gene_name	ConstantFunction
2	3_utr_parsedFeats.csv.gz_5_UTR_3_len_by_Gene_name	ConstantFunction
2	3_utr_parsedFeats.csv.gz_5_UTR_end_1_by_Gene_name	ConstantFunction
2	3_utr_parsedFeats.csv.gz_Gene_stable_ID_by_Gene_name	ConstantFunction
2	3_utr_parsedFeats.csv.gz_tot_3utr_len_by_Gene_name	ConstantFunction
2	3_utr_parsedFeats.csv.gz_T_freq_by_Gene_name	ConstantFunction
2	scala.Tuple2.apply[T1,T2](_1: T1,_2: T2): (T1,T2)	ReflectedMethodDef
2	3_utr_parsedFeats.csv.gz_5_UTR_1_len_by_Gene_name	ConstantFunction
2	3_utr_parsedFeats.csv.gz_5_UTR_start_2_by_Gene_name	ConstantFunction
2	3_utr_parsedFeats.csv.gz_5_UTR_end_2_by_Gene_name	ConstantFunction
2	3_utr_parsedFeats.csv.gz_C_by_Gene_name	ConstantFunction
1	com.sparkbeyond.runtime.feature.functions.SpecialFunctions.numericPrefix(s: String): Double	ReflectedMethodDef
1	com.sparkbeyond.runtime.feature.functions.SpecialFunctions.squared(num: Double): Double	ReflectedMethodDef
1	3_utr_parsedFeats.csv.gz_3_UTR_end_3_by_UniProtKBTrEMBL_ID	ConstantFunction
1	com.sparkbeyond.runtime.feature.functions.ImplicitFreeExtensionsDouble.sum(i: scala.collection.GenTraversableOnce[Double]): Double	ReflectedMethodDef
1	com.sparkbeyond.runtime.feature.functions.TextFunctions.countAbstractions(s: com.sparkbeyond.runtime.feature.types.SemanticWrapper): Vector[(String,Double)]	ReflectedMethodDef
1	com.sparkbeyond.runtime.feature.context.MultiLookupContext.getFirstOrDefault(key: TKey): TMember	ReflectedMethodDef
1	scala.math.cbrt(x: Double): Double	ReflectedMethodDef
1	com.sparkbeyond.runtime.feature.functions.ImplicitFreeExtensionsInt.product(i: scala.collection.GenTraversableOnce[Int]): Int	ReflectedMethodDef
1	Pharmaceutical use	InputFunction
1	3_utr_parsedFeats.csv.gz_5_UTR_2_len_by_Gene_stable_ID	ConstantFunction
1	scala.math.log10(x: Double): Double	ReflectedMethodDef
1	3_utr_parsedFeats.csv.gz_3_UTR_start_3_by_Gene_name	ConstantFunction
1	scala.collection.GenSeqLike.reverse: Repr	ReflectedMethodDef
1	com.sparkbeyond.runtime.feature.functions.Statistics.mostCommonValue[T](i: scala.collection.GenTraversableOnce[T]): Option[T]	ReflectedMethodDef
1	com.sparkbeyond.runtime.feature.functions.Statistics.diff(xs: scala.collection.GenTraversable[Double]): List[Double]	ReflectedMethodDef
1	com.sparkbeyond.runtime.feature.functions.SpecialFunctions.cubed(num: Double): Double	ReflectedMethodDef
1	com.sparkbeyond.runtime.feature.functions.Statistics.cardinality[T](i: scala.collection.GenTraversableOnce[T]): Int	ReflectedMethodDef
1	scala.math.log(x: Double): Double	ReflectedMethodDef
1	scala.Double.$minus(x: Int): Double	ReflectedMethodDef
1	com.sparkbeyond.runtime.feature.functions.SpecialFunctions.evenness(n: Int): Int	ReflectedMethodDef
1	com.sparkbeyond.runtime.feature.functions.HistogramFunctions.elementCount[A](it: scala.collection.GenTraversableOnce[A]): com.sparkbeyond.runtime.feature.types.Histogram[A]	ReflectedMethodDef
1	com.sparkbeyond.runtime.feature.functions.ImplicitFreeExtensionsString.sorted(i: String): String	ReflectedMethodDef
1	com.sparkbeyond.runtime.feature.functions.SpecialFunctions.arithmeticImplication(a: Double,b: Double): Double	ReflectedMethodDef
1	com.sparkbeyond.runtime.feature.functions.SpecialFunctions.leftSlantedWeightedAverage(a: Double,b: Double): Double	ReflectedMethodDef
1	com.sparkbeyond.runtime.feature.functions.TextFunctions.numberIn(s: com.sparkbeyond.runtime.feature.types.SemanticWrapper): Double	ReflectedMethodDef
1	scala.Int.$plus(x: Double): Double	ReflectedMethodDef
1	com.sparkbeyond.runtime.feature.functions.SpecialFunctions.rightSlantedWeightedAverage(a: Double,b: Double): Double	ReflectedMethodDef
1	com.sparkbeyond.runtime.feature.functions.TextFunctions.wordFrequencies(text: com.sparkbeyond.runtime.feature.types.SemanticWrapper): scala.collection.mutable.HashMap[String,Double]	ReflectedMethodDef
1	com.sparkbeyond.runtime.feature.functions.SpecialFunctions.splitDigitsAndLetters(s: String): List[String]	ReflectedMethodDef
1	3_utr_parsedFeats.csv.gz_Transcript_length_including_UTRs_and_CDS_by_Gene_name	ConstantFunction
1	com.sparkbeyond.runtime.feature.functions.TextFunctions.alphaStringBeforeNumber(s: com.sparkbeyond.runtime.feature.types.SemanticWrapper): String	ReflectedMethodDef
1	scala.math.pow(x: Double,y: Double): Double	ReflectedMethodDef
1	com.sparkbeyond.runtime.feature.functions.TextFunctions.numberOfWords(s: com.sparkbeyond.runtime.feature.types.SemanticWrapper): Int	ReflectedMethodDef
1	scala.collection.GenTraversableOnce.size: Int	ReflectedMethodDef
1	com.sparkbeyond.runtime.feature.functions.TextFunctions.tokenizeByWordBoundary(text: com.sparkbeyond.runtime.feature.types.SemanticWrapper): Vector[String]	ReflectedMethodDef
1	3_utr_parsedFeats.csv.gz_3_UTR_start_by_Gene_name	ConstantFunction
1	com.sparkbeyond.runtime.feature.functions.SpecialFunctions.roundToInt(num: Double): Int	ReflectedMethodDef
1	Entry name	InputFunction
1	scala.math.sqrt(x: Double): Double	ReflectedMethodDef
1	3_utr_parsedFeats.csv.gz_UniProtKBTrEMBL_ID_by_Gene_name	ConstantFunction
1	com.sparkbeyond.runtime.feature.functions.TextFunctions.numericPairs(text: com.sparkbeyond.runtime.feature.types.SemanticWrapper): Vector[(Seq[String],Double)]	ReflectedMethodDef
1	scala.math.exp(x: Double): Double	ReflectedMethodDef
1	com.sparkbeyond.runtime.feature.functions.SpecialFunctions.leftSlantedGeometricMean(a: Double,b: Double): Double	ReflectedMethodDef
1	com.sparkbeyond.runtime.feature.functions.TextFunctions.normalizedNgramsWithoutStopwords(s: com.sparkbeyond.runtime.feature.types.SemanticWrapper): List[Seq[String]]	ReflectedMethodDef
1	com.sparkbeyond.runtime.feature.functions.SpecialFunctions.inverse(num: Double): Double	ReflectedMethodDef
1	com.sparkbeyond.runtime.feature.functions.ZeroComplexityFunctions.mapKeysToTextList(map: Map[String, _]): com.sparkbeyond.runtime.feature.types.TextList	ReflectedMethodDef
1	3_utr_parsedFeats.csv.gz_5_UTR_start_by_Gene_name	ConstantFunction
1	com.sparkbeyond.runtime.feature.functions.ImplicitFreeExtensionsInt.sum(i: scala.collection.GenTraversableOnce[Int]): Int	ReflectedMethodDef
1	scala.collection.GenTraversableLike.last: A	ReflectedMethodDef
1	3_utr_parsedFeats.csv.gz_3_UTR_3_len_by_Gene_name	ConstantFunction
1	com.sparkbeyond.runtime.feature.functions.TextFunctions.normalizedNgrams(s: com.sparkbeyond.runtime.feature.types.SemanticWrapper): List[Seq[String]]	ReflectedMethodDef
1	com.sparkbeyond.runtime.feature.functions.TextFunctions.numberInUSFormat(s: com.sparkbeyond.runtime.feature.types.SemanticWrapper): Double	ReflectedMethodDef
1	com.sparkbeyond.runtime.feature.functions.TextFunctions.slidingSubsets(s: com.sparkbeyond.runtime.feature.types.SemanticWrapper): Seq[Set[String]]	ReflectedMethodDef
1	scala.Int.$percent(x: Double): Double	ReflectedMethodDef
1	3_utr_parsedFeats.csv.gz_Gene_description_by_Gene_name	ConstantFunction
1	com.sparkbeyond.runtime.feature.functions.TextFunctions.textSentimentScore(text: com.sparkbeyond.runtime.feature.types.SemanticWrapper): Double	ReflectedMethodDef
1	com.sparkbeyond.runtime.feature.functions.TextFunctions.ngrams(s: com.sparkbeyond.runtime.feature.types.SemanticWrapper): List[String]	ReflectedMethodDef
1	com.sparkbeyond.runtime.feature.functions.SpecialFunctions.normalizedNgramsWithoutStopwords(s: String): List[Seq[String]]	ReflectedMethodDef
1	com.sparkbeyond.runtime.feature.functions.TextFunctions.prefixes(s: String): scala.collection.immutable.IndexedSeq[String]	ReflectedMethodDef
1	com.sparkbeyond.runtime.feature.functions.SpecialFunctions.tokenizeByCommonDelimitersAndNormalize(s: String): Seq[String]	ReflectedMethodDef
1	com.sparkbeyond.runtime.feature.functions.TextFunctions.wordCounts(text: com.sparkbeyond.runtime.feature.types.Text): com.sparkbeyond.runtime.feature.types.Histogram[String]	ReflectedMethodDef
1	scala.math.abs(x: Int): Int	ReflectedMethodDef
1	com.sparkbeyond.runtime.feature.functions.SpecialFunctions.normalizedHistogram[T](values: scala.collection.GenTraversableOnce[T]): scala.collection.immutable.Map[T,Double]	ReflectedMethodDef
1	scala.Int.toDouble: Double	ReflectedMethodDef
1	3_utr_parsedFeats.csv.gz_A_freq_by_Gene_name	ConstantFunction
1	com.sparkbeyond.runtime.feature.functions.TextFunctions.skipgramsAndBiGrams(s: com.sparkbeyond.runtime.feature.types.SemanticWrapper): Seq[Seq[String]]	ReflectedMethodDef
1	com.sparkbeyond.runtime.feature.functions.ZeroComplexityFunctions.isNaN(d: Double): Boolean	ReflectedMethodDef
1	scala.collection.GenTraversableLike.lastOption: Option[A]	ReflectedMethodDef
1	com.sparkbeyond.runtime.feature.functions.SpecialFunctions.rightSlantedGeometricMean(a: Double,b: Double): Double	ReflectedMethodDef
1	com.sparkbeyond.runtime.feature.functions.SpecialFunctions.tokenizeCamel(x: String): Seq[String]	ReflectedMethodDef
1	human_gene_mirtar_targets.csv.gz_text_index_of_Protein families_with_attributes	ConstantFunction
1	com.sparkbeyond.runtime.feature.functions.UnIndexedFunctions.traversableOnceToVector[T](t: scala.collection.GenTraversableOnce[T]): Seq[T]	ReflectedMethodDef
1	com.sparkbeyond.runtime.feature.functions.TextFunctions.numericPairsUSFormat(s: com.sparkbeyond.runtime.feature.types.SemanticWrapper): Vector[(Seq[String],Double)]	ReflectedMethodDef
1	3_utr_parsedFeats.csv.gz_3_UTR_start_2_by_Gene_name	ConstantFunction
1	com.sparkbeyond.runtime.feature.functions.ZeroComplexityFunctions.getOrElseZero(value: Option[Double]): Double	ReflectedMethodDef
1	Allergenic properties	InputFunction
1	com.sparkbeyond.runtime.feature.functions.TextFunctions.tokenize(s: com.sparkbeyond.runtime.feature.types.StringWrapper): Seq[String]	ReflectedMethodDef
1	scala.collection.GenTraversableLike.tail: Repr	ReflectedMethodDef
1	3_utr_parsedFeats.csv.gz_3_utr_seq_by_Gene_name	ConstantFunction
1	com.sparkbeyond.runtime.feature.functions.TextFunctions.tokenizeByCommonDelimiters(s: com.sparkbeyond.runtime.feature.types.StringWrapper): Seq[String]	ReflectedMethodDef
1	3_utr_parsedFeats.csv.gz_CDS_Length_by_Gene_name	ConstantFunction
1	3_utr_parsedFeats.csv.gz_3_UTR_end_2_by_UniProtKBTrEMBL_ID	ConstantFunction
1	com.sparkbeyond.runtime.feature.functions.ImplicitFreeExtensionsDouble.min(i: Seq[Double]): Double	ReflectedMethodDef
1	com.sparkbeyond.runtime.feature.functions.SpecialFunctions.ngrams2(s: String): List[String]	ReflectedMethodDef
1	java.lang.String.toLowerCase(): java.lang.String	ReflectedMethodDef
1	com.sparkbeyond.runtime.feature.functions.TextFunctions.fractions(text: com.sparkbeyond.runtime.feature.types.SemanticWrapper): Vector[Double]	ReflectedMethodDef
1	scala.Int.$times(x: Double): Double	ReflectedMethodDef
1	com.sparkbeyond.runtime.feature.functions.TextFunctions.stemmedWords(text: com.sparkbeyond.runtime.feature.types.SemanticWrapper): Seq[String]	ReflectedMethodDef
1	com.sparkbeyond.runtime.feature.functions.GeoFunctions.deviation(coords: scala.collection.GenTraversableOnce[com.sparkbeyond.runtime.feature.types.LatLong]): Double	ReflectedMethodDef
1	com.sparkbeyond.runtime.feature.functions.TextFunctions.tokenizeByPunctuation(s: com.sparkbeyond.runtime.feature.types.SemanticWrapper): Seq[String]	ReflectedMethodDef
1	com.sparkbeyond.runtime.feature.functions.GeoFunctions.centroid(i: scala.collection.GenTraversableOnce[com.sparkbeyond.runtime.feature.types.LatLong]): com.sparkbeyond.runtime.feature.types.LatLong	ReflectedMethodDef
1	com.sparkbeyond.runtime.feature.functions.SpecialFunctions.stringElementsExtractor(s: String): String	ReflectedMethodDef
1	com.sparkbeyond.runtime.feature.functions.TextFunctions.numberOfChars(s: com.sparkbeyond.runtime.feature.types.SemanticWrapper): Int	ReflectedMethodDef
1	com.sparkbeyond.runtime.feature.functions.SpecialFunctions.reluHalf(num: Double): Double	ReflectedMethodDef
1	scala.collection.TraversableOnce.toSeq: Seq[A]	ReflectedMethodDef
1	com.sparkbeyond.runtime.feature.functions.SpecialFunctions.arithmeticNot(num: Double): Double	ReflectedMethodDef
1	com.sparkbeyond.runtime.feature.functions.TextFunctions.stemmedWordsWithoutCommonTerms(text: com.sparkbeyond.runtime.feature.types.SemanticWrapper): Seq[String]	ReflectedMethodDef
1	scala.math.expm1(x: Double): Double	ReflectedMethodDef
1	scala.math.hypot(x: Double,y: Double): Double	ReflectedMethodDef
1	com.sparkbeyond.runtime.feature.functions.SpecialFunctions.histogram[T](values: scala.collection.GenTraversableOnce[T]): scala.collection.immutable.Map[T,Double]	ReflectedMethodDef
1	com.sparkbeyond.runtime.feature.functions.ImplicitFreeExtensionsDouble.max(i: Seq[Double]): Double	ReflectedMethodDef
1	scala.collection.immutable.StringLike.linesWithSeparators: Iterator[String]	ReflectedMethodDef
1	com.sparkbeyond.runtime.feature.types.Zipcode.apply(string: String): com.sparkbeyond.runtime.feature.types.Zipcode	ReflectedMethodDef
1	3_utr_parsedFeats.csv.gz_5_UTR_start_1_by_Gene_name	ConstantFunction
1	Entry	InputFunction
1	com.sparkbeyond.runtime.feature.functions.SpecialFunctions.normalizedNgrams(s: String): List[Seq[String]]	ReflectedMethodDef
1	scala.Int.$div(x: Double): Double	ReflectedMethodDef
1	com.sparkbeyond.runtime.feature.functions.Statistics.size[T](i: scala.collection.GenTraversableOnce[T]): Int	ReflectedMethodDef
1	3_utr_parsedFeats.csv.gz_tot_5utr_len_by_Gene_name	ConstantFunction
1	Temperature dependence	InputFunction
1	scala.math.abs(x: Double): Double	ReflectedMethodDef
1	com.sparkbeyond.runtime.feature.functions.SpecialFunctions.average(a: Double,b: Double): Double	ReflectedMethodDef
1	java.lang.String.trim(): java.lang.String	ReflectedMethodDef
1	3_utr_parsedFeats.csv.gz_5_UTR_end_by_Gene_name	ConstantFunction
1	com.sparkbeyond.runtime.feature.functions.SpecialFunctions.relu(num: Double): Double	ReflectedMethodDef
1	scala.collection.GenSeqLike.distinct: Repr	ReflectedMethodDef
1	3_utr_parsedFeats.csv.gz_A_by_Gene_name	ConstantFunction
1	com.sparkbeyond.runtime.feature.functions.TextFunctions.skipgrams(s: com.sparkbeyond.runtime.feature.types.SemanticWrapper): Vector[Vector[String]]	ReflectedMethodDef
1	scala.Double.$percent(x: Double): Double	ReflectedMethodDef
1	3_utr_parsedFeats.csv.gz_3_UTR_2_len_by_Gene_name	ConstantFunction
1	com.sparkbeyond.runtime.feature.functions.SpecialFunctions.tokenizeBySpace(s: String): Seq[String]	ReflectedMethodDef
1	3_utr_parsedFeats.csv.gz_3_utr_len_by_Gene_name	ConstantFunction
1	3_utr_parsedFeats.csv.gz_5_UTR_start_3_by_Gene_name	ConstantFunction
1	com.sparkbeyond.runtime.feature.functions.HasLatLongsFunctions.latLongs(source: com.sparkbeyond.runtime.feature.types.HasLatLongs): Seq[com.sparkbeyond.runtime.feature.types.LatLong]	ReflectedMethodDef
1	3_utr_parsedFeats.csv.gz_T_by_Gene_name	ConstantFunction
1	com.sparkbeyond.runtime.feature.functions.SpecialFunctions.logSumExp(a: Double,b: Double): Double	ReflectedMethodDef
1	com.sparkbeyond.runtime.feature.functions.Statistics.percentUnique[T](i: scala.collection.GenTraversableOnce[T]): Double	ReflectedMethodDef
1	com.sparkbeyond.runtime.feature.functions.TextFunctions.adjectivesHistogram(s: com.sparkbeyond.runtime.feature.types.SemanticWrapper): com.sparkbeyond.runtime.feature.types.Histogram[String]	ReflectedMethodDef
1	3_utr_parsedFeats.csv.gz_3utr_counts_by_Gene_name	ConstantFunction
1	scala.Int.$minus(x: Double): Double	ReflectedMethodDef
1	scala.math.max(x: Double,y: Double): Double	ReflectedMethodDef
1	Gene encoded by	InputFunction
1	com.sparkbeyond.runtime.feature.functions.TextFunctions.create(string: String): com.sparkbeyond.runtime.feature.types.Text	ReflectedMethodDef
1	3_utr_parsedFeats.csv.gz_3_UTR_end_by_Gene_name	ConstantFunction
1	com.sparkbeyond.runtime.feature.functions.SpecialFunctions.tokenizeByCommonDelimiters(s: String): Seq[String]	ReflectedMethodDef
1	com.sparkbeyond.runtime.feature.functions.IndexedTextWithAttributes.weightedAverageOf3MostSimilar(indexedTextWithAttributes: com.sparkbeyond.runtime.feature.functions.IndexedTextQueries,document: com.sparkbeyond.runtime.feature.types.Text): Map[String,Double]	ReflectedMethodDef
1	com.sparkbeyond.runtime.feature.functions.TextFunctions.numbersWithSuffix(text: com.sparkbeyond.runtime.feature.types.SemanticWrapper): Seq[(String,Double)]	ReflectedMethodDef
1	com.sparkbeyond.runtime.feature.functions.SpecialFunctions.fractions(s: String): Vector[Double]	ReflectedMethodDef
1	3_utr_parsedFeats.csv.gz_3_UTR_1_len_by_Gene_name	ConstantFunction
1	scala.Double.$div(x: Int): Double	ReflectedMethodDef
1	3_utr_parsedFeats.csv.gz_3_UTR_end_2_by_Gene_name	ConstantFunction
1	scala.math.log1p(x: Double): Double	ReflectedMethodDef
